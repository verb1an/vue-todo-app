{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nimport { ref } from \"vue\";\nvar __default__ = {\n  name: \"app-item\"\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var removeItemMessage = ref({\n      show: true,\n      message: \"Удалить этот пин?\",\n      func: {\n        type: \"item:remove\",\n        action: props.todo.val.id\n      },\n      btn: {\n        yes: \"Удалить\",\n        no: \"Отмена\"\n      }\n    });\n    var __returned__ = {\n      props: props,\n      removeItemMessage: removeItemMessage,\n      ref: ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","__default__","name","removeItemMessage","show","message","func","type","action","props","todo","val","id","btn","yes","no"],"sources":["C:/Users/Setis/Documents/alex/vue-todo-app/src/components/AppItem.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :todo-id=\"todo.val.id\"\r\n        :style=\"`top: ${todo.val.position.y}px; left: ${todo.val.position.x}px; z-index: ${todo.val.position.z};`\"\r\n        class=\"todo__item component\"\r\n        :class=\"todo.val.lock ? 'lock' : ''\"\r\n        :menu-toggle=\"todo.val.menuToggle ? 'open' : 'hide'\"\r\n    >\r\n        <div class=\"todo__item_wrapper\">\r\n            <div class=\"todo__item_head\">\r\n                <span\r\n                    class=\"draggble\"\r\n                    @mousedown=\"$emit('item:setDragObject')\"\r\n                ></span>\r\n\r\n                <app-button\r\n                    type=\"button\"\r\n                    class=\"menu__toggle\"\r\n                    @click=\"todo.setItemMenuPos\"\r\n                >\r\n                    <span class=\"line\"></span>\r\n                    <span class=\"line\"></span>\r\n                    <span class=\"line\"></span>\r\n                </app-button>\r\n\r\n                <div\r\n                    class=\"todo__item_menu\"\r\n                    :menu-toggle=\"todo.val.menuToggle ? 'open' : 'hide'\"\r\n                >\r\n                    <ul class=\"list\">\r\n                        <li class=\"list__item\">\r\n                            <app-button type=\"button\">\r\n                                <!-- @click=\"arrowModeSetter\" -->\r\n                                <span\r\n                                    class=\"i-expand-from-corner\"\r\n                                    style=\"transform: translateY(-2px)\"\r\n                                    @click=\"$emit('arrow:add')\"\r\n                                ></span>\r\n                            </app-button>\r\n                        </li>\r\n                        <li class=\"list__item\">\r\n                            <app-button type=\"button\">\r\n                                <span class=\"i-file\"></span>\r\n                            </app-button>\r\n                        </li>\r\n                        <li class=\"list__item\">\r\n                            <app-button\r\n                                type=\"button\"\r\n                                @click=\"todo.setLockItem\"\r\n                            >\r\n                                <span class=\"i-lock\"></span>\r\n                            </app-button>\r\n                        </li>\r\n                        <li class=\"list__item\">\r\n                            <app-button\r\n                                type=\"button\"\r\n                                @click=\"todo.val.text.addNewCheckList\"\r\n                            >\r\n                                <span class=\"i-list-ul\"></span>\r\n                            </app-button>\r\n                        </li>\r\n                        <li class=\"list__item\">\r\n                            <app-button\r\n                                type=\"button\"\r\n                                @click=\"\r\n                                    $emit(\r\n                                        'modal:removeMessage',\r\n                                        removeItemMessage\r\n                                    )\r\n                                \"\r\n                            >\r\n                                <span class=\"i-trash-alt\"></span>\r\n                            </app-button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"todo__item_body\">\r\n                <div class=\"title\">\r\n                    <app-todo-input\r\n                        :modelValue=\"todo.val.title\"\r\n                        :placeholder=\"'Title'\"\r\n                        class=\"title\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"text\">\r\n                    <div\r\n                        v-for=\"n in todo.val.text.list.length\"\r\n                        :key=\"n\"\r\n                        class=\"text__item\"\r\n                    >\r\n                        <app-todo-text\r\n                            v-if=\"typeof todo.val.text.list[n - 1] == 'string'\"\r\n                            :modelValue=\"todo.val.text.list[n - 1]\"\r\n                            :placeholder=\"'Напишите что-нибудь...'\"\r\n                            class=\"default\"\r\n                        />\r\n                        <app-todo-list\r\n                            v-else\r\n                            :content=\"todo.val.text.list[n - 1]\"\r\n                            @item:changeStatus=\"\r\n                                (value) =>\r\n                                    todo.val.text.changeCheckItemStatus(\r\n                                        value,\r\n                                        n - 1\r\n                                    )\r\n                            \"\r\n                            @item:addCheckItem=\"\r\n                                (value) =>\r\n                                    todo.val.text.addNewCheckItem(value, n - 1)\r\n                            \"\r\n                            @item:removeCheckItem=\"\r\n                                (value) =>\r\n                                    todo.val.text.removeCheckItem(value, n - 1)\r\n                            \"\r\n                            @input:blur=\"() => todo.val.text.removeFocus(n - 1)\"\r\n                        />\r\n                        <!-- @todo:changeStatus=\"changeStatusTodoItem\"\r\n                            @todo:addItem=\"addNewTodoItem\"\r\n                            @todo:removeItem=\"removeTodoItem\"\r\n                            @input:blur=\"removeFocusTodoItemInput\" -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <span\r\n            v-if=\"todo.val.lock\"\r\n            class=\"locked__status i-lock\"\r\n        ></span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"app-item\",\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport { defineProps, ref } from \"vue\";\r\nconst props = defineProps({\r\n    todo: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n});\r\n\r\nconst removeItemMessage = ref({\r\n    show: true,\r\n    message: \"Удалить этот пин?\",\r\n    func: {\r\n        type: \"item:remove\",\r\n        action: props.todo.val.id,\r\n    },\r\n    btn: {\r\n        yes: \"Удалить\",\r\n        no: \"Отмена\",\r\n    },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@use \"@/assets/scss/theme/_theme_item.scss\";\r\n</style>\r\n"],"mappings":";AA6IA,SAAsBA,GAAG,QAAQ,KAAK;AANtC,IAAAC,WAAA,GAAe;EACXC,IAAI,EAAE;AACV,CAAC;;;;;;;;;;;;IAYD,IAAMC,iBAAiB,GAAGH,GAAG,CAAC;MAC1BI,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,mBAAmB;MAC5BC,IAAI,EAAE;QACFC,IAAI,EAAE,aAAa;QACnBC,MAAM,EAAEC,KAAK,CAACC,IAAI,CAACC,GAAG,CAACC;MAC3B,CAAC;MACDC,GAAG,EAAE;QACDC,GAAG,EAAE,SAAS;QACdC,EAAE,EAAE;MACR;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}