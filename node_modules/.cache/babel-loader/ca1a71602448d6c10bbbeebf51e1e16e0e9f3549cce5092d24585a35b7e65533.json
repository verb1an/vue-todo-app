{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref } from \"vue\";\nimport { getItemInDocById, getItemInDataById } from \"@/hooks/getItem\";\nimport { fixEvent } from './hooks/fixEvent';\nimport { useTodoItemList } from \"./hooks/todoItemList\";\nimport { useDragObject } from './hooks/dragObject';\nexport default {\n  __name: 'App',\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var todoList = useTodoItemList([{\n      id: Math.random() * 1000,\n      title: \"Title\",\n      text: [\"Пустая строка\"],\n      position: {\n        x: window.innerWidth / 2 - 200,\n        y: window.innerHeight / 2 - 200,\n        z: 100\n      },\n      menuToggle: false,\n      lock: false\n    }, {\n      id: Math.random() * 1000,\n      title: \"Title\",\n      text: [\"Пустая строка\"],\n      position: {\n        x: window.innerWidth / 2 - 200,\n        y: window.innerHeight / 2 - 200,\n        z: 100\n      },\n      menuToggle: false,\n      lock: false\n    }]);\n    // const arrows = ref([]);\n\n    var successItem = ref({\n      show: false,\n      message: \"\",\n      func: null,\n      btn: {\n        yes: \"\",\n        no: \"\"\n      }\n    });\n    var dragObject = useDragObject(null);\n    // let arrowMode = ref(false);\n    // let arrowModeItems = ref({\n    //     firstItem: null,\n    //     secondItem: null,\n    // });\n    // let arrowObject = ref(null);\n\n    // <!-- ? item movement -->\n\n    var mouseX = ref(0);\n    var mouseY = ref(0);\n    var offsetItemX = dragObject.offsetItemX;\n    var offsetItemY = dragObject.offsetItemY;\n    function mouseMove(event) {\n      event = fixEvent(event);\n      mouseX.value = event.pageX;\n      mouseY.value = event.pageY;\n      if (dragObject.val.value) {\n        var item = todoList.list.find(function (el) {\n          return el.val.id == dragObject.val.value.getAttribute(\"todo-id\");\n        });\n        if (item.val.lock) return;\n        var xPos = mouseX.value - offsetItemX.value;\n        var yPos = mouseY.value - offsetItemY.value;\n        if (mouseY.value + dragObject.val.value.getBoundingClientRect().height / 3 < window.innerHeight && mouseY.value > 20) {\n          item.setItemPos(xPos, yPos);\n        } else {\n          item.setItemPos(xPos, null);\n        }\n      }\n\n      // if (arrowMode.value === true) {\n      //     document.querySelector(\".arrowModeSecondItem\").style = `position: absolute; width: 2px; height: 2px;top: ${\n      //         mouseY.value - 5\n      //     }px; left: ${mouseX.value - 5}px; pointer-events: none;`;\n      //     redrawArrows(null, arrows.value);\n      // }\n    }\n\n    // <!-- ? Modal Window functional -->\n\n    function modalJustClose() {\n      successItem.value = {\n        show: false,\n        message: \"\",\n        func: null,\n        btn: {\n          yes: \"\",\n          no: \"\"\n        }\n      };\n    }\n    function modalDoIt(content) {\n      if (content.type === \"item:delete\") {\n        todoList.removeItem(content.id);\n      }\n      modalJustClose();\n    }\n\n    // <!-- ? Todo -->\n    // function addNewTodoList(event) {\n    //     const item = getItemInDataById(todoList.value, event.target.closest(\".todo__item\").getAttribute(\"todo-id\"));\n    //     item.text.push([\n    //         {\n    //             id: 1,\n    //             text: \"\",\n    //             status: false,\n    //         },\n    //     ]);\n    //     item.text.push(\"\");\n    // }\n\n    function changeStatusTodoItem(status) {\n      var item = getItemInDataById(todoList.value, status.itemId);\n      getItemInDataById(item.text[status.listCount], status.todoId).status = !getItemInDataById(item.text[status.listCount], status.todoId).status;\n    }\n    function addNewTodoItem(status) {\n      var list = getItemInDataById(todoList.value, status.itemId).text[status.listCount];\n      var itt = list.reduce(function (acc, curr) {\n        if (acc.id > curr.id) return acc;else return curr;\n      });\n      list.splice(list.findIndex(function (el) {\n        return el.id == status.todoId;\n      }) + 1, 0, {\n        id: itt.id + 1,\n        text: \"\",\n        status: false,\n        focus: true\n      });\n    }\n    function removeTodoItem(status) {\n      var item = getItemInDataById(todoList.value, status.itemId);\n      var list = item.text[status.listCount];\n      list.splice(list.findIndex(function (el) {\n        return el.id == status.todoId;\n      }), 1);\n      if (!list.length) {\n        if (typeof item.text[status.listCount - 1] === \"string\") {\n          if (typeof item.text[status.listCount + 1] === \"string\") {\n            item.text[status.listCount - 1] += item.text[status.listCount + 1];\n            item.text.splice(status.listCount + 1, 1);\n          }\n        } else {\n          if (typeof item.text[status.listCount + 1] !== \"string\") {\n            item.text.splice(status.listCount - 1, 0, \"\");\n          }\n        }\n        item.text.splice(status.listCount, 1);\n      }\n    }\n    function removeFocusTodoItemInput(status) {\n      var list = getItemInDataById(todoList.value, status.itemId).text[status.listCount];\n      list[list.findIndex(function (el) {\n        return el.id == status.todoId;\n      })].focus = false;\n    }\n\n    // <!-- ? Arrows -->\n\n    // function setArrows(arrow, fi, si) {\n    //     const firstItem = fi.getBoundingClientRect();\n    //     const secondItem = si.getBoundingClientRect();\n\n    //     const firstItemXcenter = firstItem.left + firstItem.width / 2,\n    //         firstItemYcenter = firstItem.top + firstItem.height / 2,\n    //         secondItemXcenter = secondItem.left + secondItem.width / 2,\n    //         secondItemYcenter = secondItem.top + secondItem.height / 2;\n\n    //     let startArrow = { x: 0, y: 0 };\n    //     let endArrow = { x: 0, y: 0 };\n\n    //     let offsetFirstItemX = 0;\n    //     let offsetFirstItemY = 0;\n    //     let offsetSecondItemX = 0;\n    //     let offsetSecondItemY = 0;\n\n    //     if (Math.abs(firstItemXcenter - secondItemXcenter) > Math.abs(firstItemYcenter - secondItemYcenter)) {\n    //         offsetFirstItemX = firstItem.width / 2;\n    //         offsetFirstItemY = firstItem.height / 4;\n    //         offsetSecondItemX = secondItem.width / 2;\n    //         offsetSecondItemY = secondItem.height / 4;\n\n    //         if (Math.abs(firstItemYcenter - secondItemYcenter) < 100) {\n    //             offsetFirstItemY = 0;\n    //             offsetSecondItemY = 0;\n    //         }\n    //     } else {\n    //         offsetFirstItemX = firstItem.width / 4;\n    //         offsetFirstItemY = firstItem.height / 2;\n    //         offsetSecondItemX = secondItem.width / 4;\n    //         offsetSecondItemY = secondItem.height / 2;\n    //     }\n\n    //     if (firstItemXcenter > secondItemXcenter) {\n    //         // <!-- * 2nd item left side -->\n    //         startArrow.x = firstItemXcenter - offsetFirstItemX;\n    //         endArrow.x = secondItemXcenter + offsetSecondItemX;\n    //     } else {\n    //         // <!-- * 2nd item right side -->\n    //         startArrow.x = firstItemXcenter + offsetFirstItemX;\n    //         endArrow.x = secondItemXcenter - offsetSecondItemX;\n    //     }\n\n    //     if (firstItemYcenter > secondItemYcenter) {\n    //         // <!-- * 2nd item top -->\n    //         startArrow.y = firstItemYcenter - offsetFirstItemY;\n    //         endArrow.y = secondItemYcenter + offsetSecondItemY;\n    //     } else {\n    //         // <!-- * 2nd item bottom -->\n    //         startArrow.y = firstItemYcenter + offsetFirstItemY;\n    //         endArrow.y = secondItemYcenter - offsetSecondItemY;\n    //     }\n\n    //     const docArrow = document.querySelector(`#area g[arrow-id='${arrow.id}']`);\n    //     if (!docArrow) {\n    //         document.getElementById(\"area\").innerHTML += `\n    //             <g arrow-id='${arrow.id}' class=\"arrow__line\">\n    //                 <defs>\n    //                     <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"4\" refX=\"5\" refY=\"2\" orient=\"auto\">\n    //                         <polygon points=\"0 0, 5 2, 0 4\" />\n    //                     </marker>\n    //                 </defs>\n    //                 <line class=\"line__main\" x1=\"${startArrow.x}\" y1=\"${startArrow.y}\" x2=\"${endArrow.x}\" y2=\"${endArrow.y}\" stroke-width=\"3\" marker-end=\"url(#arrowhead)\" />\n    //             </g>\n    //         `;\n    //     } else {\n    //         docArrow.querySelector(\".line__main\").setAttribute(\"x1\", startArrow.x);\n    //         docArrow.querySelector(\".line__main\").setAttribute(\"y1\", startArrow.y);\n    //         docArrow.querySelector(\".line__main\").setAttribute(\"x2\", endArrow.x);\n    //         docArrow.querySelector(\".line__main\").setAttribute(\"y2\", endArrow.y);\n    //     }\n    // }\n\n    // function redrawArrows(dragObject, arrows) {\n    //     if (arrowMode.value === true) {\n    //         setArrows(arrows.at(-1), getItemInDocById(arrows.at(-1).firstItem), arrows.at(-1).secondItem);\n    //         return;\n    //     }\n\n    //     const todoItem = getItemInDataById(todoList.value, dragObject.getAttribute(\"todo-id\"));\n    //     arrows.forEach((el) => {\n    //         if (todoItem.id == el.firstItem || todoItem.id == el.secondItem) {\n    //             setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\n    //         }\n    //     });\n    // }\n\n    // function arrowModeSetter(event) {\n    //     arrowMode.value = true;\n    //     const secondArrowModeItem = document.createElement(\"div\");\n    //     secondArrowModeItem.className = \"arrowModeSecondItem\";\n    //     document.querySelector(\".main\").append(secondArrowModeItem);\n\n    //     arrowModeItems.value.firstItem = event.target.closest(\".todo__item\");\n    //     arrowModeItems.value.secondItem = secondArrowModeItem;\n\n    //     arrows.value.push({\n    //         id: crypto.randomUUID(),\n    //         firstItem: event.target.closest(\".todo__item\").getAttribute(\"todo-id\"),\n    //         secondItem: secondArrowModeItem,\n    //     });\n\n    //     setArrows(arrows.value.at(-1), getItemInDocById(arrows.value.at(-1).firstItem), arrows.value.at(-1).secondItem);\n\n    //     getItemInDataById(todoList.value, event.target.closest(\".todo__item\").getAttribute(\"todo-id\")).menuToggle = false;\n    // }\n\n    // function addNewArrow(event) {\n    //     if (!arrowMode.value) return;\n\n    //     if (event.target.closest(\".todo__item\")) {\n    //         const item = event.target.closest(\".todo__item\");\n    //         if (item.getAttribute(\"todo-id\") === arrows.value.at(-1).firstItem) return;\n\n    //         arrows.value.at(-1).secondItem = item.getAttribute(\"todo-id\");\n\n    //         arrowMode.value = false;\n    //         arrowModeItems.value.firstItem = null;\n    //         arrowModeItems.value.secondItem = null;\n\n    //         document.querySelector(\".arrowModeSecondItem\").remove();\n    //     }\n\n    //     arrows.value.forEach((el) => {\n    //         setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\n    //     });\n    // }\n\n    // <!-- ? Items list function -->\n\n    function hoverFocusedItem(id) {\n      getItemInDocById(id).classList.add(\"hover\");\n    }\n    function blurFocusedItem() {\n      document.querySelectorAll(\".todo__item\").forEach(function (el) {\n        return el.classList.remove(\"hover\");\n      });\n    }\n\n    // <!-- ? Dop functions -->\n\n    // function setKeyListener() {\n    //     document.addEventListener(\"keydown\", (event) => {\n    //         if(event.key === \"Delete\" ) {\n    //             if(arrowObject.value) {\n    //                 arrows.value.forEach((el, index) => {\n    //                     if(el.id === arrowObject.value.getAttribute(\"arrow-id\")) {\n    //                         console.log(\"123\")\n    //                         arrows.value.splice(index, 1);\n    //                     }\n\n    //                     document.getElementById(\"area\").innerHTML = '';\n    //                     arrows.value.forEach((el) => {\n    //                         setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\n    //                     });\n\n    //                     if(!arrows.value.length) {\n    //                         document.getElementById(\"area\").innerHTML = '';\n    //                     }\n    //                 })\n    //             }\n    //         }\n    //     })\n    // }\n\n    // onMounted(() => {\n    //     let area = document.getElementById(\"area\");\n\n    //     area.setAttribute(\"width\", window.innerWidth);\n    //     area.setAttribute(\"height\", window.innerHeight);\n\n    //     area.addEventListener(\"click\", (event) => {\n    //         if(event.target.closest(\".arrow__line\") !== null) {\n    //             arrowObject.value = event.target.closest(\".arrow__line\");\n    //             event.target.closest(\".arrow__line\").classList.add(\"focused\");\n    //         }else{\n    //             arrowObject.value = null;\n    //         }\n    //     })\n\n    //     arrows.value.forEach((el) => {\n    //         setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\n    //     });\n\n    //     window.addEventListener(\"resize\", () => {\n    //         arrows.value.forEach((el) => {\n    //             setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\n    //         });\n    //     });\n\n    //     setKeyListener();\n    // });\n\n    var __returned__ = {\n      todoList: todoList,\n      successItem: successItem,\n      get dragObject() {\n        return dragObject;\n      },\n      set dragObject(v) {\n        dragObject = v;\n      },\n      mouseX: mouseX,\n      mouseY: mouseY,\n      offsetItemX: offsetItemX,\n      offsetItemY: offsetItemY,\n      mouseMove: mouseMove,\n      modalJustClose: modalJustClose,\n      modalDoIt: modalDoIt,\n      changeStatusTodoItem: changeStatusTodoItem,\n      addNewTodoItem: addNewTodoItem,\n      removeTodoItem: removeTodoItem,\n      removeFocusTodoItemInput: removeFocusTodoItemInput,\n      hoverFocusedItem: hoverFocusedItem,\n      blurFocusedItem: blurFocusedItem,\n      ref: ref,\n      get getItemInDocById() {\n        return getItemInDocById;\n      },\n      get getItemInDataById() {\n        return getItemInDataById;\n      },\n      get fixEvent() {\n        return fixEvent;\n      },\n      get useTodoItemList() {\n        return useTodoItemList;\n      },\n      get useDragObject() {\n        return useDragObject;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","getItemInDocById","getItemInDataById","fixEvent","useTodoItemList","useDragObject","todoList","id","Math","random","title","text","position","x","window","innerWidth","y","innerHeight","z","menuToggle","lock","successItem","show","message","func","btn","yes","no","dragObject","mouseX","mouseY","offsetItemX","offsetItemY","mouseMove","event","value","pageX","pageY","val","item","list","find","el","getAttribute","xPos","yPos","getBoundingClientRect","height","setItemPos","modalJustClose","modalDoIt","content","type","removeItem","changeStatusTodoItem","status","itemId","listCount","todoId","addNewTodoItem","itt","reduce","acc","curr","splice","findIndex","focus","removeTodoItem","length","removeFocusTodoItemInput","hoverFocusedItem","classList","add","blurFocusedItem","document","querySelectorAll","forEach","remove"],"sources":["C:/Users/Setis/Documents/alex/vue-todo-app/src/App.vue"],"sourcesContent":["<template>\r\n    <main class=\"main\" @mousemove=\"mouseMove\" @mouseup=\"dragObject.removeDragObject\">\r\n        <div class=\"wrapper\">\r\n            <div\r\n                v-for=\"todo in todoList.list\"\r\n                :key=\"todo.val.id\"\r\n                :todo-id=\"todo.val.id\"\r\n                :style=\"`top: ${todo.val.position.y}px; left: ${todo.val.position.x}px; z-index: ${todo.val.position.z};`\"\r\n                class=\"todo__item component\"\r\n                :class=\"todo.val.lock ? 'lock' : ''\"\r\n                :menu-toggle=\"todo.val.menuToggle ? 'open' : 'hide'\"\r\n                \r\n                @mouseup=\"todoList.setToTopItem\"\r\n                @click=\"addNewArrow\"\r\n                @mouseenter=\"mouseenterMaybeSetElement\"\r\n                @mouseleave=\"mouseleaveMaybeSetElement\"\r\n            >\r\n                <div class=\"todo__item_wrapper\">\r\n                    <div class=\"todo__item_head\">\r\n                        <span class=\"draggble\" @mousedown=\"() => {dragObject.setDragObject();todo.val.menuToggle = false;}\"></span>\r\n\r\n                        <app-button type=\"button\" class=\"menu__toggle\" @click=\"todo.setItemMenuPos\">\r\n                            <span class=\"line\"></span>\r\n                            <span class=\"line\"></span>\r\n                            <span class=\"line\"></span>\r\n                        </app-button>\r\n\r\n                        <div class=\"todo__item_menu\" :menu-toggle=\"todo.val.menuToggle ? 'open' : 'hide'\">\r\n                            <ul class=\"list\">\r\n                                <li class=\"list__item\">\r\n                                    <app-button type=\"button\" >\r\n                                        <!-- @click=\"arrowModeSetter\" -->\r\n                                        <span class=\"i-expand-from-corner\" style=\"transform: translateY(-2px)\"></span>\r\n                                    </app-button>\r\n                                </li>\r\n                                <li class=\"list__item\">\r\n                                    <app-button type=\"button\">\r\n                                        <span class=\"i-file\"></span>\r\n                                    </app-button>\r\n                                </li>\r\n                                <li class=\"list__item\">\r\n                                    <app-button type=\"button\" @click=\"todo.setLockItem\">\r\n                                        <span class=\"i-lock\"></span>\r\n                                    </app-button>\r\n                                </li>\r\n                                <li class=\"list__item\">\r\n                                    <app-button type=\"button\" @click=\"todo.addNewCheckList\">\r\n                                        <span class=\"i-list-ul\"></span>\r\n                                    </app-button>\r\n                                </li>\r\n                                <li class=\"list__item\">\r\n                                    <app-button type=\"button\" @click=\"successItem = todo.showDeleteDiolog()\">\r\n                                        <span class=\"i-trash-alt\"></span>\r\n                                    </app-button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"todo__item_body\">\r\n                        <div class=\"title\">\r\n                            <app-todo-input v-model=\"todo.val.title\" :placeholder=\"'Title'\" class=\"title\" />\r\n                        </div>\r\n\r\n                        <div class=\"text\">\r\n                            <div v-for=\"n in todo.val.text.length\" :key=\"n\" class=\"text__item\">\r\n                                <app-todo-text\r\n                                    v-if=\"typeof todo.val.text[n - 1] == 'string'\"\r\n                                    v-model=\"todo.val.text[n - 1]\"\r\n                                    :placeholder=\"'Напишите что-нибудь...'\"\r\n                                    class=\"default\"\r\n                                />\r\n                                <app-todo-list\r\n                                    v-else\r\n                                    :content=\"todo.val.text[n - 1]\"\r\n                                    :itemId=\"todo.val.id\"\r\n                                    :listCount=\"n - 1\"\r\n                                    @todo:changeStatus=\"changeStatusTodoItem\"\r\n                                    @todo:addItem=\"addNewTodoItem\"\r\n                                    @todo:removeItem=\"removeTodoItem\"\r\n                                    @input:blur=\"removeFocusTodoItemInput\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <span v-if=\"todo.val.lock\" class=\"locked__status i-lock\"></span>\r\n            </div>\r\n\r\n            <!-- <svg id=\"area\" viewbox=\"0 0 1600 900\"></svg> -->\r\n\r\n            <div v-if=\"todoList.length < 1\" class=\"items__none\">\r\n                <h3>Привет)) Как у тебя дела?</h3>\r\n                <app-button type=\"button\" class=\"items__none_button\" @click=\"todoList.addNewItem\">\r\n                    <span class=\"i-plus\"></span>\r\n                    <span>Нажми на меня</span>\r\n                </app-button>\r\n            </div>\r\n        </div>\r\n\r\n        <app-items-list\r\n            v-if=\"todoList.length > 0\"\r\n            :items=\"todoList\"\r\n            @item:hover=\"hoverFocusedItem\"\r\n            @item:blur=\"blurFocusedItem\"\r\n            @item:add=\"addNewItem\"\r\n        />\r\n        <app-modal-window-success\r\n            :content=\"successItem\"\r\n            @modal:close=\"modalJustClose\"\r\n            @modal:success=\"modalDoIt\"\r\n        />\r\n\r\n        <div class=\"textAreaHeightResize\"></div>\r\n    </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { getItemInDocById, getItemInDataById } from \"@/hooks/getItem\";\r\nimport { fixEvent } from './hooks/fixEvent';\r\nimport { useTodoItemList } from \"./hooks/todoItemList\";\r\nimport { useDragObject } from './hooks/dragObject';\r\n\r\n\r\nconst todoList = useTodoItemList([\r\n    {\r\n        id: Math.random() * 1000,\r\n        title: \"Title\",\r\n        text: [\"Пустая строка\"],\r\n        position: {\r\n            x: window.innerWidth / 2 - 200,\r\n            y: window.innerHeight / 2 - 200,\r\n            z: 100,\r\n        },\r\n        menuToggle: false,\r\n        lock: false,\r\n    },\r\n    {\r\n        id: Math.random() * 1000,\r\n        title: \"Title\",\r\n        text: [\"Пустая строка\"],\r\n        position: {\r\n            x: window.innerWidth / 2 - 200,\r\n            y: window.innerHeight / 2 - 200,\r\n            z: 100,\r\n        },\r\n        menuToggle: false,\r\n        lock: false,\r\n    }\r\n]);\r\n// const arrows = ref([]);\r\n\r\nconst successItem = ref({\r\n    show: false,\r\n    message: \"\",\r\n    func: null,\r\n    btn: {\r\n        yes: \"\",\r\n        no: \"\",\r\n    },\r\n});\r\n\r\nlet dragObject = useDragObject(null);\r\n// let arrowMode = ref(false);\r\n// let arrowModeItems = ref({\r\n//     firstItem: null,\r\n//     secondItem: null,\r\n// });\r\n// let arrowObject = ref(null);\r\n\r\n// <!-- ? item movement -->\r\n\r\nconst mouseX = ref(0);\r\nconst mouseY = ref(0);\r\n\r\nconst offsetItemX = dragObject.offsetItemX;\r\nconst offsetItemY = dragObject.offsetItemY;\r\n\r\nfunction mouseMove(event) {\r\n    event = fixEvent(event);\r\n    mouseX.value = event.pageX;\r\n    mouseY.value = event.pageY;\r\n    \r\n\r\n    if (dragObject.val.value) {\r\n        const item = todoList.list.find((el) => el.val.id == dragObject.val.value.getAttribute(\"todo-id\"))\r\n        if(item.val.lock) return;\r\n\r\n        let xPos = mouseX.value - offsetItemX.value;\r\n        let yPos = mouseY.value - offsetItemY.value;\r\n\r\n        if( mouseY.value + dragObject.val.value.getBoundingClientRect().height / 3 < window.innerHeight && mouseY.value > 20 ) {\r\n            item.setItemPos(xPos, yPos)\r\n        }else{\r\n            item.setItemPos(xPos, null);\r\n        }\r\n            \r\n    }\r\n\r\n    // if (arrowMode.value === true) {\r\n    //     document.querySelector(\".arrowModeSecondItem\").style = `position: absolute; width: 2px; height: 2px;top: ${\r\n    //         mouseY.value - 5\r\n    //     }px; left: ${mouseX.value - 5}px; pointer-events: none;`;\r\n    //     redrawArrows(null, arrows.value);\r\n    // }\r\n}\r\n\r\n// <!-- ? Modal Window functional -->\r\n\r\nfunction modalJustClose() {\r\n    successItem.value = {\r\n        show: false,\r\n        message: \"\",\r\n        func: null,\r\n        btn: {\r\n            yes: \"\",\r\n            no: \"\",\r\n        },\r\n    };\r\n}\r\n\r\nfunction modalDoIt(content) {\r\n    if (content.type === \"item:delete\") {\r\n        todoList.removeItem(content.id);\r\n    }\r\n    modalJustClose();\r\n}\r\n\r\n// <!-- ? Todo -->\r\n// function addNewTodoList(event) {\r\n//     const item = getItemInDataById(todoList.value, event.target.closest(\".todo__item\").getAttribute(\"todo-id\"));\r\n//     item.text.push([\r\n//         {\r\n//             id: 1,\r\n//             text: \"\",\r\n//             status: false,\r\n//         },\r\n//     ]);\r\n//     item.text.push(\"\");\r\n// }\r\n\r\nfunction changeStatusTodoItem(status) {\r\n    let item = getItemInDataById(todoList.value, status.itemId);\r\n    getItemInDataById(item.text[status.listCount], status.todoId).status = !getItemInDataById(\r\n        item.text[status.listCount],\r\n        status.todoId\r\n    ).status;\r\n}\r\n\r\nfunction addNewTodoItem(status) {\r\n    const list = getItemInDataById(todoList.value, status.itemId).text[status.listCount];\r\n\r\n    let itt = list.reduce(function (acc, curr) {\r\n        if (acc.id > curr.id) return acc;\r\n        else return curr;\r\n    });\r\n\r\n    list.splice(list.findIndex((el) => el.id == status.todoId) + 1, 0, {\r\n        id: itt.id + 1,\r\n        text: \"\",\r\n        status: false,\r\n        focus: true,\r\n    });\r\n}\r\n\r\nfunction removeTodoItem(status) {\r\n    const item = getItemInDataById(todoList.value, status.itemId);\r\n    const list = item.text[status.listCount];\r\n    list.splice(\r\n        list.findIndex((el) => el.id == status.todoId),\r\n        1\r\n    );\r\n\r\n    if (!list.length) {\r\n        if (typeof item.text[status.listCount - 1] === \"string\") {\r\n            if (typeof item.text[status.listCount + 1] === \"string\") {\r\n                item.text[status.listCount - 1] += item.text[status.listCount + 1];\r\n                item.text.splice(status.listCount + 1, 1);\r\n            }\r\n        } else {\r\n            if (typeof item.text[status.listCount + 1] !== \"string\") {\r\n                item.text.splice(status.listCount - 1, 0, \"\");\r\n            }\r\n        }\r\n\r\n        item.text.splice(status.listCount, 1);\r\n    }\r\n}\r\n\r\nfunction removeFocusTodoItemInput(status) {\r\n    const list = getItemInDataById(todoList.value, status.itemId).text[status.listCount];\r\n    list[list.findIndex((el) => el.id == status.todoId)].focus = false;\r\n}\r\n\r\n// <!-- ? Arrows -->\r\n\r\n// function setArrows(arrow, fi, si) {\r\n//     const firstItem = fi.getBoundingClientRect();\r\n//     const secondItem = si.getBoundingClientRect();\r\n\r\n//     const firstItemXcenter = firstItem.left + firstItem.width / 2,\r\n//         firstItemYcenter = firstItem.top + firstItem.height / 2,\r\n//         secondItemXcenter = secondItem.left + secondItem.width / 2,\r\n//         secondItemYcenter = secondItem.top + secondItem.height / 2;\r\n\r\n//     let startArrow = { x: 0, y: 0 };\r\n//     let endArrow = { x: 0, y: 0 };\r\n\r\n//     let offsetFirstItemX = 0;\r\n//     let offsetFirstItemY = 0;\r\n//     let offsetSecondItemX = 0;\r\n//     let offsetSecondItemY = 0;\r\n\r\n//     if (Math.abs(firstItemXcenter - secondItemXcenter) > Math.abs(firstItemYcenter - secondItemYcenter)) {\r\n//         offsetFirstItemX = firstItem.width / 2;\r\n//         offsetFirstItemY = firstItem.height / 4;\r\n//         offsetSecondItemX = secondItem.width / 2;\r\n//         offsetSecondItemY = secondItem.height / 4;\r\n\r\n//         if (Math.abs(firstItemYcenter - secondItemYcenter) < 100) {\r\n//             offsetFirstItemY = 0;\r\n//             offsetSecondItemY = 0;\r\n//         }\r\n//     } else {\r\n//         offsetFirstItemX = firstItem.width / 4;\r\n//         offsetFirstItemY = firstItem.height / 2;\r\n//         offsetSecondItemX = secondItem.width / 4;\r\n//         offsetSecondItemY = secondItem.height / 2;\r\n//     }\r\n\r\n//     if (firstItemXcenter > secondItemXcenter) {\r\n//         // <!-- * 2nd item left side -->\r\n//         startArrow.x = firstItemXcenter - offsetFirstItemX;\r\n//         endArrow.x = secondItemXcenter + offsetSecondItemX;\r\n//     } else {\r\n//         // <!-- * 2nd item right side -->\r\n//         startArrow.x = firstItemXcenter + offsetFirstItemX;\r\n//         endArrow.x = secondItemXcenter - offsetSecondItemX;\r\n//     }\r\n\r\n//     if (firstItemYcenter > secondItemYcenter) {\r\n//         // <!-- * 2nd item top -->\r\n//         startArrow.y = firstItemYcenter - offsetFirstItemY;\r\n//         endArrow.y = secondItemYcenter + offsetSecondItemY;\r\n//     } else {\r\n//         // <!-- * 2nd item bottom -->\r\n//         startArrow.y = firstItemYcenter + offsetFirstItemY;\r\n//         endArrow.y = secondItemYcenter - offsetSecondItemY;\r\n//     }\r\n\r\n//     const docArrow = document.querySelector(`#area g[arrow-id='${arrow.id}']`);\r\n//     if (!docArrow) {\r\n//         document.getElementById(\"area\").innerHTML += `\r\n//             <g arrow-id='${arrow.id}' class=\"arrow__line\">\r\n//                 <defs>\r\n//                     <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"4\" refX=\"5\" refY=\"2\" orient=\"auto\">\r\n//                         <polygon points=\"0 0, 5 2, 0 4\" />\r\n//                     </marker>\r\n//                 </defs>\r\n//                 <line class=\"line__main\" x1=\"${startArrow.x}\" y1=\"${startArrow.y}\" x2=\"${endArrow.x}\" y2=\"${endArrow.y}\" stroke-width=\"3\" marker-end=\"url(#arrowhead)\" />\r\n//             </g>\r\n//         `;\r\n//     } else {\r\n//         docArrow.querySelector(\".line__main\").setAttribute(\"x1\", startArrow.x);\r\n//         docArrow.querySelector(\".line__main\").setAttribute(\"y1\", startArrow.y);\r\n//         docArrow.querySelector(\".line__main\").setAttribute(\"x2\", endArrow.x);\r\n//         docArrow.querySelector(\".line__main\").setAttribute(\"y2\", endArrow.y);\r\n//     }\r\n// }\r\n\r\n// function redrawArrows(dragObject, arrows) {\r\n//     if (arrowMode.value === true) {\r\n//         setArrows(arrows.at(-1), getItemInDocById(arrows.at(-1).firstItem), arrows.at(-1).secondItem);\r\n//         return;\r\n//     }\r\n\r\n//     const todoItem = getItemInDataById(todoList.value, dragObject.getAttribute(\"todo-id\"));\r\n//     arrows.forEach((el) => {\r\n//         if (todoItem.id == el.firstItem || todoItem.id == el.secondItem) {\r\n//             setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\r\n//         }\r\n//     });\r\n// }\r\n\r\n// function arrowModeSetter(event) {\r\n//     arrowMode.value = true;\r\n//     const secondArrowModeItem = document.createElement(\"div\");\r\n//     secondArrowModeItem.className = \"arrowModeSecondItem\";\r\n//     document.querySelector(\".main\").append(secondArrowModeItem);\r\n\r\n//     arrowModeItems.value.firstItem = event.target.closest(\".todo__item\");\r\n//     arrowModeItems.value.secondItem = secondArrowModeItem;\r\n\r\n//     arrows.value.push({\r\n//         id: crypto.randomUUID(),\r\n//         firstItem: event.target.closest(\".todo__item\").getAttribute(\"todo-id\"),\r\n//         secondItem: secondArrowModeItem,\r\n//     });\r\n\r\n//     setArrows(arrows.value.at(-1), getItemInDocById(arrows.value.at(-1).firstItem), arrows.value.at(-1).secondItem);\r\n\r\n//     getItemInDataById(todoList.value, event.target.closest(\".todo__item\").getAttribute(\"todo-id\")).menuToggle = false;\r\n// }\r\n\r\n// function addNewArrow(event) {\r\n//     if (!arrowMode.value) return;\r\n\r\n//     if (event.target.closest(\".todo__item\")) {\r\n//         const item = event.target.closest(\".todo__item\");\r\n//         if (item.getAttribute(\"todo-id\") === arrows.value.at(-1).firstItem) return;\r\n\r\n//         arrows.value.at(-1).secondItem = item.getAttribute(\"todo-id\");\r\n\r\n//         arrowMode.value = false;\r\n//         arrowModeItems.value.firstItem = null;\r\n//         arrowModeItems.value.secondItem = null;\r\n\r\n//         document.querySelector(\".arrowModeSecondItem\").remove();\r\n//     }\r\n\r\n//     arrows.value.forEach((el) => {\r\n//         setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\r\n//     });\r\n// }\r\n\r\n// <!-- ? Items list function -->\r\n\r\nfunction hoverFocusedItem(id) {\r\n    getItemInDocById(id).classList.add(\"hover\");\r\n}\r\n\r\nfunction blurFocusedItem() {\r\n    document.querySelectorAll(\".todo__item\").forEach((el) => el.classList.remove(\"hover\"));\r\n}\r\n\r\n// <!-- ? Dop functions -->\r\n\r\n// function setKeyListener() {\r\n//     document.addEventListener(\"keydown\", (event) => {\r\n//         if(event.key === \"Delete\" ) {\r\n//             if(arrowObject.value) {\r\n//                 arrows.value.forEach((el, index) => {\r\n//                     if(el.id === arrowObject.value.getAttribute(\"arrow-id\")) {\r\n//                         console.log(\"123\")\r\n//                         arrows.value.splice(index, 1);\r\n//                     }\r\n\r\n//                     document.getElementById(\"area\").innerHTML = '';\r\n//                     arrows.value.forEach((el) => {\r\n//                         setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\r\n//                     });\r\n\r\n//                     if(!arrows.value.length) {\r\n//                         document.getElementById(\"area\").innerHTML = '';\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     })\r\n// }\r\n\r\n// onMounted(() => {\r\n//     let area = document.getElementById(\"area\");\r\n\r\n//     area.setAttribute(\"width\", window.innerWidth);\r\n//     area.setAttribute(\"height\", window.innerHeight);\r\n\r\n//     area.addEventListener(\"click\", (event) => {\r\n//         if(event.target.closest(\".arrow__line\") !== null) {\r\n//             arrowObject.value = event.target.closest(\".arrow__line\");\r\n//             event.target.closest(\".arrow__line\").classList.add(\"focused\");\r\n//         }else{\r\n//             arrowObject.value = null;\r\n//         }\r\n//     })\r\n\r\n//     arrows.value.forEach((el) => {\r\n//         setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\r\n//     });\r\n\r\n//     window.addEventListener(\"resize\", () => {\r\n//         arrows.value.forEach((el) => {\r\n//             setArrows(el, getItemInDocById(el.firstItem), getItemInDocById(el.secondItem));\r\n//         });\r\n//     });\r\n\r\n//     setKeyListener();\r\n// });\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@use '@/assets/scss/theme/_theme_main.scss'\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}