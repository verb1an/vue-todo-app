{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { onMounted, ref, useAttrs } from \"vue\";\nvar __default__ = {\n  name: \"app-todo-text\"\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  props: {\n    modelValue: {\n      type: String,\n      required: false,\n      \"default\": \"\"\n    },\n    placeholder: {\n      type: String,\n      required: false,\n      \"default\": \"\"\n    },\n    focus: {\n      type: Boolean,\n      required: false,\n      \"default\": false\n    },\n    maxLength: {\n      type: Number,\n      required: false,\n      \"default\": 512\n    }\n  },\n  emits: [\"input\", \"update:modelValue\", \"input:addInput\", \"input:blur\"],\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    expose();\n    var props = __props;\n    var attrs = useAttrs();\n    var item = ref(null);\n    var todoTextHeight = ref(20);\n    function returnValue(event) {\n      textAreaHeightResizeFunction(event.target.value.replaceAll('\\n', \"</br>\"), event.target.getBoundingClientRect().width, getComputedStyle(event.target).fontSize);\n      emit(\"update:modelValue\", event.target.value);\n    }\n    function textAreaHeightResizeFunction(value, width, font) {\n      var blockForInfo = document.createElement('div');\n      blockForInfo.className = \"textAreaHeightResize\";\n      document.querySelector(\"main\").append(blockForInfo);\n      blockForInfo.innerHTML = '';\n      blockForInfo.innerHTML = value;\n      blockForInfo.style = \"width: \".concat(width, \"px; word-wrap: break-word; font-size: \").concat(font, \";\");\n      var newHeight = blockForInfo.getBoundingClientRect().height + 5;\n      if (attrs[\"class\"] == 'default') newHeight += 19; // <!-- ? Default text first line-break padding -->\n\n      if (newHeight < 20) newHeight = 20;else if (newHeight > 200) newHeight = 200;\n      todoTextHeight.value = newHeight;\n      blockForInfo.remove();\n    }\n    onMounted(function () {\n      textAreaHeightResizeFunction(props.modelValue.replaceAll('\\n', \"</br>\"), item.value.getBoundingClientRect().width);\n      if (props.focus == true) {\n        item.value.focus();\n      }\n    });\n    var __returned__ = {\n      props: props,\n      emit: emit,\n      attrs: attrs,\n      item: item,\n      todoTextHeight: todoTextHeight,\n      returnValue: returnValue,\n      textAreaHeightResizeFunction: textAreaHeightResizeFunction,\n      onMounted: onMounted,\n      ref: ref,\n      useAttrs: useAttrs\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["onMounted","ref","useAttrs","__default__","name","attrs","item","todoTextHeight","returnValue","event","textAreaHeightResizeFunction","target","value","replaceAll","getBoundingClientRect","width","getComputedStyle","fontSize","emit","font","blockForInfo","document","createElement","className","querySelector","append","innerHTML","style","concat","newHeight","height","remove","props","modelValue","focus"],"sources":["C:/Users/Setis/Documents/alex/vue-todo-app/src/components/AppTodoText.vue"],"sourcesContent":["<template>\r\n    <div class=\"component text\" v-bind=\"$attrs\" :style=\"`height:${todoTextHeight}px;`\" >\r\n        <textarea\r\n            type=\"text\"\r\n            class=\"text__item\"\r\n            :value=\"modelValue\"\r\n            :ttr=\"modelValue\"\r\n            :maxlength=\"maxLength\"\r\n            @input=\"returnValue\"\r\n            @change=\"returnValue\"\r\n\r\n            @blur=\"$emit('input:blur')\"\r\n\r\n            ref=\"item\"\r\n            :style=\"`overflow-y: ${todoTextHeight >= 200 ? 'scroll' : 'hidden'}`\"\r\n        ></textarea>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"app-todo-text\",\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport { defineEmits, defineProps, onMounted, ref, useAttrs } from \"vue\";\r\n\r\nconst props = defineProps({\r\n    modelValue: { type: String, required: false, default: \"\" },\r\n    placeholder: { type: String, required: false, default: \"\" },\r\n    focus: { type: Boolean, required: false, default: false },\r\n    maxLength: { type: Number, required: false, default: 512 }\r\n});\r\nconst emit = defineEmits([\"input\", \"update:modelValue\", \"input:addInput\", \"input:blur\"]);\r\nconst attrs = useAttrs();\r\n\r\nconst item = ref(null);\r\nconst todoTextHeight = ref(20);\r\n\r\nfunction returnValue(event) {\r\n    textAreaHeightResizeFunction(event.target.value.replaceAll('\\n', \"</br>\"), event.target.getBoundingClientRect().width, getComputedStyle(event.target).fontSize)\r\n    emit(\"update:modelValue\", event.target.value);\r\n}\r\n\r\nfunction textAreaHeightResizeFunction (value, width, font) {\r\n    \r\n    const blockForInfo = document.createElement('div');\r\n\r\n    blockForInfo.className = \"textAreaHeightResize\";\r\n    document.querySelector(\"main\").append(blockForInfo);\r\n\r\n    blockForInfo.innerHTML = '';\r\n    blockForInfo.innerHTML = value;\r\n\r\n    blockForInfo.style = `width: ${width}px; word-wrap: break-word; font-size: ${font};`;\r\n    \r\n    let newHeight = blockForInfo.getBoundingClientRect().height + 5;\r\n    if(attrs.class == 'default') newHeight += 19; // <!-- ? Default text first line-break padding -->\r\n\r\n    if(newHeight < 20) newHeight = 20;\r\n    else if (newHeight > 200) newHeight = 200;\r\n\r\n    todoTextHeight.value = newHeight;\r\n\r\n    blockForInfo.remove();\r\n\r\n}\r\n\r\nonMounted(() => {\r\n    textAreaHeightResizeFunction( props.modelValue.replaceAll('\\n', \"</br>\"), item.value.getBoundingClientRect().width )\r\n    if( props.focus == true ) {\r\n        item.value.focus();\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@use '@/assets/scss/vars';\r\n.component.text {\r\n    textarea {\r\n        background-color: transparent;\r\n        border: none;\r\n        outline: none;\r\n        resize: none;\r\n\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: vars.$color-g-white;\r\n        transition: 1s;\r\n        line-height: 18px;\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    &.default {\r\n\r\n        textarea {\r\n\r\n            &::placeholder {\r\n                color: vars.$color-g-white;\r\n            }\r\n        }\r\n\r\n        &[status='true'] {\r\n            textarea {\r\n                text-decoration: line-through;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"mappings":";;;;;;AA0BA,SAAmCA,SAAS,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AANxE,IAAAC,WAAA,GAAe;EACXC,IAAI,EAAE;AACV,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaD,IAAMC,KAAK,GAAGH,QAAQ,EAAE;IAExB,IAAMI,IAAI,GAAGL,GAAG,CAAC,IAAI,CAAC;IACtB,IAAMM,cAAc,GAAGN,GAAG,CAAC,EAAE,CAAC;IAE9B,SAASO,WAAWA,CAACC,KAAK,EAAE;MACxBC,4BAA4B,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,EAAEJ,KAAK,CAACE,MAAM,CAACG,qBAAqB,EAAE,CAACC,KAAK,EAAEC,gBAAgB,CAACP,KAAK,CAACE,MAAM,CAAC,CAACM,QAAQ,CAAC;MAC/JC,IAAI,CAAC,mBAAmB,EAAET,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACjD;IAEA,SAASF,4BAA4BA,CAAEE,KAAK,EAAEG,KAAK,EAAEI,IAAI,EAAE;MAEvD,IAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAElDF,YAAY,CAACG,SAAS,GAAG,sBAAsB;MAC/CF,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC,CAACC,MAAM,CAACL,YAAY,CAAC;MAEnDA,YAAY,CAACM,SAAS,GAAG,EAAE;MAC3BN,YAAY,CAACM,SAAS,GAAGd,KAAK;MAE9BQ,YAAY,CAACO,KAAK,aAAAC,MAAA,CAAab,KAAK,4CAAAa,MAAA,CAAyCT,IAAI,MAAG;MAEpF,IAAIU,SAAS,GAAGT,YAAY,CAACN,qBAAqB,EAAE,CAACgB,MAAM,GAAG,CAAC;MAC/D,IAAGzB,KAAK,SAAM,IAAI,SAAS,EAAEwB,SAAS,IAAI,EAAE,CAAC,CAAC;;MAE9C,IAAGA,SAAS,GAAG,EAAE,EAAEA,SAAS,GAAG,EAAE,CAAC,KAC7B,IAAIA,SAAS,GAAG,GAAG,EAAEA,SAAS,GAAG,GAAG;MAEzCtB,cAAc,CAACK,KAAK,GAAGiB,SAAS;MAEhCT,YAAY,CAACW,MAAM,EAAE;IAEzB;IAEA/B,SAAS,CAAC,YAAM;MACZU,4BAA4B,CAAEsB,KAAK,CAACC,UAAU,CAACpB,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,EAAEP,IAAI,CAACM,KAAK,CAACE,qBAAqB,EAAE,CAACC,KAAK,CAAE;MACpH,IAAIiB,KAAK,CAACE,KAAK,IAAI,IAAI,EAAG;QACtB5B,IAAI,CAACM,KAAK,CAACsB,KAAK,EAAE;MACtB;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}